# Generated by Django 3.2.25 on 2025-01-11 07:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdditionalFeatureItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AdditionalFeatureList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('type', models.CharField(choices=[('enemy_feature', 'Enemy feature'), ('party_feature', 'Party feature'), ('name', 'Name')], max_length=20)),
            ],
            options={
                'ordering': ['type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ChangeLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publish_date', models.DateField()),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=3000)),
            ],
            options={
                'ordering': ['publish_date'],
            },
        ),
        migrations.CreateModel(
            name='CombatStyle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('die_set', models.CharField(default='STR+DEX', max_length=30)),
                ('one_h_amount', models.CharField(default='0', max_length=30)),
                ('two_h_amount', models.CharField(default='0', max_length=30)),
                ('ranged_amount', models.CharField(default='0', max_length=30)),
                ('shield_amount', models.CharField(default='0', max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='EnemyTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('folk_spell_amount', models.CharField(blank=True, default='0', max_length=30, null=True)),
                ('theism_spell_amount', models.CharField(blank=True, default='0', max_length=30, null=True)),
                ('sorcery_spell_amount', models.CharField(blank=True, default='0', max_length=30, null=True)),
                ('mysticism_spell_amount', models.CharField(blank=True, default='0', max_length=30, null=True)),
                ('spirit_amount', models.CharField(blank=True, default='0', max_length=30, null=True)),
                ('cult_amount', models.CharField(blank=True, default='0', max_length=30, null=True)),
                ('generated', models.IntegerField(default=0)),
                ('used', models.IntegerField(default=0)),
                ('published', models.BooleanField(default=False)),
                ('natural_armor', models.BooleanField(default=False)),
                ('rank', models.SmallIntegerField(choices=[(1, 'Rabble'), (2, 'Novice'), (3, 'Skilled'), (4, 'Veteran'), (5, 'Master')], default=2)),
                ('movement', models.CharField(default=6, max_length=50)),
                ('notes', models.TextField(blank=True, null=True)),
                ('cult_rank', models.SmallIntegerField(choices=[(0, 'None'), (1, 'Common'), (2, 'Dedicated'), (3, 'Proven'), (4, 'Overseer'), (5, 'Leader')], default=0)),
                ('weapon_filter', models.CharField(blank=True, max_length=50, null=True)),
                ('namelist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='enemygen.additionalfeaturelist')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Party',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('published', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, default='', null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Race',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('movement', models.CharField(default=6, max_length=50)),
                ('special', models.TextField(blank=True)),
                ('published', models.BooleanField(default=False)),
                ('discorporate', models.BooleanField(default=False)),
                ('elemental', models.BooleanField(default=False)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SkillAbstract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('standard', models.BooleanField(default=True)),
                ('magic', models.BooleanField(default=False)),
                ('default_value', models.CharField(blank=True, max_length=30)),
                ('include', models.BooleanField()),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SpellAbstract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('type', models.CharField(choices=[('folk', 'Folk magic'), ('theism', 'Theism'), ('sorcery', 'Sorcery'), ('mysticism', 'Mysticism')], max_length=30)),
                ('detail', models.BooleanField(default=False)),
                ('default_detail', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StatAbstract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('order', models.SmallIntegerField(null=True)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Weapon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('damage', models.CharField(default=0, max_length=30)),
                ('type', models.CharField(choices=[('1h-melee', '1-h Melee'), ('2h-melee', '2-h Melee'), ('ranged', 'Ranged'), ('shield', 'Shield')], max_length=30)),
                ('size', models.CharField(choices=[('S', 'S'), ('M', 'M'), ('L', 'L'), ('H', 'H'), ('E', 'E'), ('C', 'C')], max_length=1)),
                ('reach', models.CharField(choices=[('-', '-'), ('T', 'T'), ('S', 'S'), ('M', 'M'), ('L', 'L'), ('VL', 'VL'), ('U', 'U')], max_length=2)),
                ('ap', models.SmallIntegerField(default=0)),
                ('hp', models.SmallIntegerField(default=0)),
                ('damage_modifier', models.BooleanField(default=True)),
                ('special_effects', models.CharField(blank=True, max_length=300, null=True)),
                ('range', models.CharField(blank=True, max_length=15, null=True)),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TemplateToParty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.CharField(max_length=50)),
                ('party', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enemygen.party')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enemygen.enemytemplate')),
            ],
        ),
        migrations.CreateModel(
            name='Ruleset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('races', models.ManyToManyField(blank=True, to='enemygen.Race')),
                ('skills', models.ManyToManyField(blank=True, to='enemygen.SkillAbstract')),
                ('stats', models.ManyToManyField(blank=True, to='enemygen.StatAbstract')),
            ],
        ),
        migrations.CreateModel(
            name='RaceStat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_value', models.CharField(max_length=30, null=True)),
                ('race', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enemygen.race')),
                ('stat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enemygen.statabstract')),
            ],
            options={
                'ordering': ['stat'],
            },
        ),
        migrations.CreateModel(
            name='PartyNonrandomFeature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enemygen.additionalfeatureitem')),
                ('party', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enemygen.party')),
            ],
        ),
        migrations.CreateModel(
            name='PartyAdditionalFeatureList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('probability', models.CharField(blank=True, default='50', max_length=30, null=True)),
                ('feature_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enemygen.additionalfeaturelist')),
                ('party', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enemygen.party')),
            ],
            options={
                'ordering': ['feature_list'],
            },
        ),
        migrations.CreateModel(
            name='HitLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('armor', models.CharField(default='0', max_length=30)),
                ('range_start', models.SmallIntegerField()),
                ('range_end', models.SmallIntegerField()),
                ('hp_modifier', models.CharField(default='0', max_length=30)),
                ('race', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enemygen.race')),
            ],
            options={
                'ordering': ['range_start'],
            },
        ),
        migrations.AddField(
            model_name='enemytemplate',
            name='race',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enemygen.race'),
        ),
        migrations.AddField(
            model_name='enemytemplate',
            name='ruleset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enemygen.ruleset'),
        ),
        migrations.AddField(
            model_name='enemytemplate',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.CreateModel(
            name='EnemyStat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('die_set', models.CharField(max_length=30, null=True)),
                ('enemy_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enemygen.enemytemplate')),
                ('stat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enemygen.statabstract')),
            ],
            options={
                'ordering': ['stat'],
            },
        ),
        migrations.CreateModel(
            name='EnemySpirit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('probability', models.SmallIntegerField(default=0)),
                ('enemy_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='animist', to='enemygen.enemytemplate')),
                ('spirit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spirit', to='enemygen.enemytemplate')),
            ],
            options={
                'ordering': ['spirit'],
            },
        ),
        migrations.CreateModel(
            name='EnemyNonrandomFeature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enemy_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enemygen.enemytemplate')),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enemygen.additionalfeatureitem')),
            ],
        ),
        migrations.CreateModel(
            name='EnemyHitLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('armor', models.CharField(blank=True, max_length=30)),
                ('enemy_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enemygen.enemytemplate')),
                ('hit_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enemygen.hitlocation')),
            ],
            options={
                'ordering': ['hit_location'],
            },
        ),
        migrations.CreateModel(
            name='EnemyCult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('probability', models.SmallIntegerField(default=0)),
                ('cult', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cult', to='enemygen.enemytemplate')),
                ('enemy_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enemytemplate', to='enemygen.enemytemplate')),
            ],
            options={
                'ordering': ['cult'],
            },
        ),
        migrations.CreateModel(
            name='EnemyAdditionalFeatureList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('probability', models.CharField(blank=True, default='POW+POW', max_length=30, null=True)),
                ('enemy_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enemygen.enemytemplate')),
                ('feature_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enemygen.additionalfeaturelist')),
            ],
            options={
                'ordering': ['feature_list'],
            },
        ),
        migrations.CreateModel(
            name='CustomWeapon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('probability', models.SmallIntegerField(default=0)),
                ('damage', models.CharField(default=0, max_length=30)),
                ('type', models.CharField(choices=[('1h-melee', '1-h Melee'), ('2h-melee', '2-h Melee'), ('ranged', 'Ranged'), ('shield', 'Shield')], default='1h-melee', max_length=30)),
                ('size', models.CharField(choices=[('-', '-'), ('S', 'S'), ('M', 'M'), ('L', 'L'), ('H', 'H'), ('E', 'E'), ('C', 'C')], default='M', max_length=1)),
                ('reach', models.CharField(choices=[('-', '-'), ('T', 'T'), ('S', 'S'), ('M', 'M'), ('L', 'L'), ('VL', 'VL')], default='M', max_length=2)),
                ('ap', models.SmallIntegerField(default=0)),
                ('hp', models.SmallIntegerField(default=0)),
                ('damage_modifier', models.BooleanField(default=True)),
                ('natural_weapon', models.BooleanField(default=False)),
                ('ap_hp_as_per', models.CharField(blank=True, default='', max_length=30, null=True)),
                ('special_effects', models.CharField(blank=True, max_length=300, null=True)),
                ('range', models.CharField(blank=True, default='-', max_length=15, null=True)),
                ('combat_style', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enemygen.combatstyle')),
            ],
        ),
        migrations.CreateModel(
            name='CustomSpell',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('probability', models.SmallIntegerField(default=0)),
                ('type', models.CharField(choices=[('folk', 'Folk magic'), ('theism', 'Theism'), ('sorcery', 'Sorcery'), ('mysticism', 'Mysticism')], max_length=30)),
                ('enemy_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enemygen.enemytemplate')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CustomSkill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('die_set', models.CharField(blank=True, max_length=30)),
                ('include', models.BooleanField()),
                ('enemy_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enemygen.enemytemplate')),
            ],
        ),
        migrations.AddField(
            model_name='combatstyle',
            name='enemy_template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enemygen.enemytemplate'),
        ),
        migrations.AddField(
            model_name='additionalfeatureitem',
            name='feature_list',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enemygen.additionalfeaturelist'),
        ),
        migrations.CreateModel(
            name='Star',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enemygen.enemytemplate')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'template')},
            },
        ),
        migrations.CreateModel(
            name='EnemyWeapon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('probability', models.SmallIntegerField(default=1)),
                ('combat_style', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enemygen.combatstyle')),
                ('weapon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enemygen.weapon')),
            ],
            options={
                'unique_together': {('combat_style', 'weapon')},
            },
        ),
        migrations.CreateModel(
            name='EnemySpell',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('probability', models.SmallIntegerField(default=0)),
                ('detail', models.CharField(blank=True, max_length=50, null=True)),
                ('enemy_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enemygen.enemytemplate')),
                ('spell', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enemygen.spellabstract')),
            ],
            options={
                'ordering': ['spell'],
                'unique_together': {('spell', 'enemy_template')},
            },
        ),
        migrations.CreateModel(
            name='EnemySkill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('die_set', models.CharField(blank=True, max_length=100)),
                ('include', models.BooleanField()),
                ('enemy_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enemygen.enemytemplate')),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enemygen.skillabstract')),
            ],
            options={
                'ordering': ['skill'],
                'unique_together': {('enemy_template', 'skill')},
            },
        ),
    ]
